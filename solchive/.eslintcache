[{"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\index.js":"1","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\reportWebVitals.js":"2","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\App.js":"3","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Sections\\Footer.js":"4","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Sections\\Header.js":"5","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\Project.js":"6","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Main\\Main.js":"7","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\UpdateProject\\UpdateProject.js":"8","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\CreateProject\\CreateProject.js":"9","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Auth\\Login.js":"10","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Main\\MainHeader.js":"11","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Main\\ProjectList.js":"12","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\DeleteProject\\DeleteProject.js":"13","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Main\\ProjectWrapperByYear.js":"14","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Main\\ProjectListItem.js":"15","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\QuestionIndex\\QuestionIndex.js":"16","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\Question\\Question.js":"17","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\Impression\\ImpressionWrapper.js":"18","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\Impression\\Impression.js":"19"},{"size":562,"mtime":1611823931784,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1611823931788,"results":"22","hashOfConfig":"21"},{"size":906,"mtime":1611823931664,"results":"23","hashOfConfig":"21"},{"size":344,"mtime":1611823931739,"results":"24","hashOfConfig":"21"},{"size":1773,"mtime":1613621879500,"results":"25","hashOfConfig":"21"},{"size":4692,"mtime":1613641680755,"results":"26","hashOfConfig":"21"},{"size":372,"mtime":1611823931681,"results":"27","hashOfConfig":"21"},{"size":12928,"mtime":1613641680780,"results":"28","hashOfConfig":"21"},{"size":9897,"mtime":1613641680735,"results":"29","hashOfConfig":"21"},{"size":3131,"mtime":1613641680719,"results":"30","hashOfConfig":"21"},{"size":628,"mtime":1611823931682,"results":"31","hashOfConfig":"21"},{"size":2146,"mtime":1613641680727,"results":"32","hashOfConfig":"21"},{"size":627,"mtime":1611823931718,"results":"33","hashOfConfig":"21"},{"size":798,"mtime":1611823931697,"results":"34","hashOfConfig":"21"},{"size":1455,"mtime":1611823931695,"results":"35","hashOfConfig":"21"},{"size":1146,"mtime":1613641680771,"results":"36","hashOfConfig":"21"},{"size":753,"mtime":1613641680764,"results":"37","hashOfConfig":"21"},{"size":1982,"mtime":1613641680748,"results":"38","hashOfConfig":"21"},{"size":981,"mtime":1613641680741,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"17fjwzv",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\index.js",[],["83","84"],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\reportWebVitals.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\App.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Sections\\Footer.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Sections\\Header.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\Project.js",["85"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport style from './Projects.module.css';\r\nimport DeleteProject from './DeleteProject/DeleteProject';\r\n\r\nclass Project extends Component {\r\n    state = {\r\n        projects: [],\r\n        loginresult: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.callAPI().then(\r\n            res => {\r\n                this.setState({projects: res[0]});\r\n                console.log(this.state.projects);\r\n        }).catch(\r\n            error => { console.log(error);\r\n        });\r\n\r\n        this.chkId().catch(\r\n            error => { console.log(error);\r\n        });\r\n    }\r\n\r\n    callAPI = async () => {\r\n        const { id } = this.props.match.params;\r\n        const res = await fetch('/api/project/' + id);\r\n        const body = await res.json();\r\n        return body;\r\n    }\r\n\r\n    chkId = async () => {\r\n        const requestOptions = {\r\n            method: 'get',\r\n            credentials: 'include',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n        fetch(\"http://localhost:5000/chkserver\", requestOptions)\r\n        .then(res => {\r\n            // console.log(res);\r\n            return res.json();\r\n        })\r\n        .then(responseData => {\r\n            console.log(responseData);\r\n            this.setState({\r\n                loginresult: responseData.loginresult,\r\n            });\r\n        }).catch(\r\n            error => { console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.wrapper}>\r\n                <div className=\"description--section\">\r\n                    <div className={style.title}>\r\n                        <h1>{this.state.projects.title}</h1>\r\n                    </div>\r\n                    <div className={style.subinfo}>\r\n                        <span className={style.team}>{this.state.projects.team}</span>\r\n                        <div className={style.spacer}></div>\r\n                        <span className={style.period}>{this.state.projects.period}</span>\r\n                    </div>\r\n                    <div>\r\n                        <img className={style.image} src={'/upload/' + this.state.projects.body_images}/>\r\n                    </div>\r\n                    <div className=\"body--framework\">\r\n                        <p className={style.small_title}>👷🏻 사용 프레임워크</p>\r\n                        <p className={style.contents}>{this.state.projects.framework}</p>\r\n                    </div>\r\n                    <div className=\"body--short\">\r\n                        <p className={style.small_title}>👀 프로젝트 한줄소개</p>\r\n                        <p className={style.contents}>{this.state.projects.summary}</p>\r\n                    </div>\r\n                    <div className=\"body--content\">\r\n                        <p className={style.small_title}>👩🏻 💻 개발 스토리</p>\r\n                        <p className={style.contents}>{this.state.projects.body_text}</p>\r\n                    </div>\r\n                    <div className=\"body--comments\">\r\n                        <p className={style.small_title}>💬 프로젝트 참여 후기</p>\r\n                        <div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>{ \r\n                    this.state.loginresult === \"solux1004\" ?\r\n                    <div>\r\n                        <Link to={{\r\n                            pathname: `/update/${this.state.projects.id}`,\r\n                        }}>\r\n                        <button className={\"btn \" + style.modify_btn}>수정</button>\r\n                    </Link>\r\n                    <DeleteProject id = {this.props.match.params.id}>삭제</DeleteProject>\r\n                    </div>\r\n                : \r\n                <></>\r\n                }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Project;","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Main\\Main.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\UpdateProject\\UpdateProject.js",["86","87","88","89","90","91"],"import React, { Component, createRef } from 'react';\r\nimport axios,{ post } from 'axios';\r\nimport style from './UpdateProject.module.css';\r\n\r\nclass UpdateProject extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            id: \"\",\r\n            title: \"\",\r\n            framework: \"\",\r\n            team: \"\",\r\n            git_url: \"\",\r\n            period: \"\",\r\n            body_images: [],\r\n            summary: \"\",\r\n            body_text: \"\",\r\n            name1: \"\",\r\n            name2: \"\",\r\n            name3: \"\",\r\n            name4: \"\",\r\n            name5: \"\",\r\n            comment1: \"\",\r\n            comment2: \"\",\r\n            comment3: \"\",\r\n            comment4: \"\",\r\n            comment5: \"\",\r\n            index: 1,\r\n            loginresult: \"\",\r\n        }\r\n        \r\n        //this.state.comment.push;\r\n        this.handleFileChange = this.handleFileChange.bind(this);\r\n        this.handleFormModifySubmit = this.handleFormModifySubmit.bind(this);\r\n        this.fileInput = React.createRef();\r\n        this.handleValueChange = this.handleValueChange.bind(this);\r\n        this.updateProject = this.updateProject.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.chkId().catch(\r\n            error => { console.log(error);\r\n        });\r\n\r\n        this.callAPI().then(\r\n            res => {\r\n                console.log(res[0]);\r\n                this.setState(res[0]);\r\n            }\r\n        ).catch(\r\n            error => {console.log(error);}\r\n        );\r\n\r\n        this.callCommentAPI().then(\r\n            res => {\r\n                \r\n                console.log(res[0]);\r\n                if(res[0].name2 !== \"\"){\r\n                    this.addCommentsHandler(res[0].name2, res[0].comment2);\r\n                }\r\n                if(res[0].name3 !== \"\"){\r\n                    this.addCommentsHandler(res[0].name3, res[0].comment3);\r\n                }\r\n                if(res[0].name4 !== \"\"){\r\n                    this.addCommentsHandler(res[0].name4, res[0].comment4);\r\n                }\r\n                if(res[0].name5 !== \"\"){\r\n                    this.addCommentsHandler(res[0].name5, res[0].comment5);\r\n                }\r\n                \r\n                this.setState(\r\n                    res[0]\r\n                );\r\n                console.log(res[0]);\r\n            }\r\n        ).catch(\r\n            error => {console.log(error);}\r\n        );\r\n\r\n        \r\n    }\r\n\r\n    callAPI = async () => {\r\n        const { id } = this.props.match.params;\r\n        const res = await fetch(`/api/project/${id}`);\r\n        const body = await res.json();\r\n        return body;\r\n    }\r\n\r\n    callCommentAPI = async () => {\r\n        const { id } = this.props.match.params;\r\n        const res = await fetch(`/api/comment/${id}`);\r\n        const body = await res.json();\r\n        return body;\r\n    }\r\n\r\n    chkId = async () => {\r\n        const requestOptions = {\r\n            method: 'get',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            credentials: 'include',\r\n        };\r\n        fetch(\"http://localhost:5000/chkserver\", requestOptions)\r\n        .then(res => {\r\n            console.log(res);\r\n            return res.json();\r\n        })\r\n        .then(responseData => {\r\n            console.log(responseData);\r\n            this.setState({\r\n                loginresult: responseData.loginresult,\r\n            });\r\n            \r\n            console.log(responseData.loginresult);\r\n            if(this.state.loginresult === false){\r\n                alert(\"로그인 후 이용해 주시길 바랍니다. 감사합니다.\");\r\n                window.location.href = '/login';\r\n            }\r\n        }).catch(\r\n            error => { console.log(error);\r\n        });\r\n    }\r\n\r\n    handleFileChange(e) {\r\n        this.setState({\r\n            body_images: e.target.files[0],\r\n        });\r\n    }\r\n\r\n    handleFormModifySubmit(e){\r\n        e.preventDefault();\r\n        this.updateProject().then((res) => {\r\n            console.log(res);\r\n            //this.addComment();\r\n        });\r\n        alert(\"수정 완료되었습니다.\");\r\n        //window.location.href = '/';\r\n    }\r\n\r\n    handleValueChange(e) {\r\n        let nextState = {};\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState);\r\n        console.log(this.state);\r\n    }\r\n\r\n    updateProject = async () => {\r\n\r\n        const url = 'http://localhost:5000/api/update';\r\n\r\n        const formData = new FormData();\r\n        formData.append('id', this.state.id);\r\n        formData.append('title', this.state.title);\r\n        formData.append('team', this.state.team);\r\n        formData.append('period', this.state.period);\r\n        formData.append('framework', this.state.framework);\r\n        formData.append('body_text', this.state.body_text);\r\n        formData.append('body_images', this.state.body_images);\r\n        formData.append('summary', this.state.summary);\r\n        formData.append('git_url', this.state.git_url);\r\n        formData.append('name1', this.state.name1);\r\n        formData.append('comment1', this.state.comment1);\r\n        formData.append('name2', this.state.name2);\r\n        formData.append('comment2', this.state.comment2);\r\n        formData.append('name3', this.state.name3);\r\n        formData.append('comment3', this.state.comment3);\r\n        formData.append('name4', this.state.name4);\r\n        formData.append('comment4', this.state.comment4);\r\n        formData.append('name5', this.state.name5);\r\n        formData.append('comment5', this.state.comment5);\r\n        console.log(this.state.body_images);\r\n        \r\n        const config = {\r\n            'content-type': 'multipart/form-data'\r\n        }\r\n\r\n        return post(url, formData, config).then(res => {\r\n            alert('성공')\r\n          }).catch(err => {\r\n            console.log(err.message);\r\n        });\r\n    }\r\n    /*\r\n    addComment = async () => {\r\n        await axios\r\n            .post('http://localhost:5000/api/comment', {\r\n                \r\n\r\n                name1: this.comment[0].userName,    \r\n                comment1: this.state.comment[0].impression,\r\n                name2: this.comment[1].userName,    \r\n                comment2: this.state.comment[1].impression,\r\n                name3: this.comment[2].userName,    \r\n                comment3: this.state.comment[2].impression,\r\n                name4: this.comment[3].userName,    \r\n                comment4: this.state.comment[3].impression,\r\n                name5: this.comment[4].userName,    \r\n                comment5: this.state.comment[4].impression,\r\n\r\n                name1: this.state.name.name1,\r\n                comment1: this.state.comment1,\r\n                name2: this.state.name.name2,\r\n                comment2: this.state.comment2,\r\n                name3: this.state.name.name3,\r\n                comment3: this.state.comment3,\r\n                name4: this.state.name.name4,\r\n                comment4: this.state.comment4,\r\n                name5: this.state.name.name5,\r\n                comment5: this.state.comment5,\r\n                \r\n                name[0]: this.state.name1,\r\n                comment[0]: this.state.comment1,\r\n                name[1]: this.state.name2,\r\n                comment[1]: this.state.comment2,\r\n                name[2]: this.state.name3,\r\n                comment[2]: this.state.comment3,\r\n                name[3]: this.state.name4,\r\n                comment[3]: this.state.comment4,\r\n                name[4]: this.state.name5,\r\n                comment[4]: this.state.comment5,\r\n\r\n            }).then((res) => {\r\n                console.log(res);\r\n            });\r\n    }\r\n    */\r\n    addCommentsHandler = (userName, userComment) => {\r\n        let commentsWrapper = document.querySelector(\".update--comments--wrapper\");\r\n        let comments = document.querySelector(\".\" + style.comments).cloneNode(true);\r\n        let nameInput = comments.childNodes[0].childNodes[1];\r\n        let impressionInput = comments.childNodes[1].childNodes[1];\r\n        this.setState((prevState) => {\r\n            index: ++prevState.index\r\n        })\r\n        nameInput.setAttribute(\"name\", \"name\" + this.state.index);\r\n        nameInput.addEventListener(\"change\", this.handleValueChange);\r\n        nameInput.value = userName;\r\n        impressionInput.setAttribute(\"name\", \"comment\" + this.state.index);\r\n        impressionInput.addEventListener(\"change\", this.handleValueChange);\r\n        impressionInput.value = userComment;\r\n        console.log(comments);\r\n        commentsWrapper.appendChild(comments);\r\n    }\r\n\r\n    subtractCommentHandler = () => {\r\n        let comments = document.querySelector(\".\" + style.comments);\r\n        let nameInput = comments.childNodes[0].childNodes[1];\r\n        let impressionInput = comments.childNodes[1].childNodes[1];\r\n        this.setState((prevState) => {\r\n            index: --prevState.index\r\n        })\r\n\r\n        nameInput.value = \"\";\r\n        impressionInput.value = \"\";\r\n        \r\n        comments.remove();\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const nameRef=createRef();\r\n\r\n        return (\r\n            \r\n            <div className={style.form_wrapper}>\r\n                <h3>프로젝트 내용 수정하기</h3>\r\n                <form className={style.inputform} onSubmit={this.handleFormModifySubmit} method=\"post\"> \r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>프로젝트 제목</label>\r\n                            <input type=\"text\" name=\"title\" className=\"form-control\" placeholder=\"제목\" value={this.state.title} onChange={this.handleValueChange}/>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>사용 프레임워크</label>\r\n                            <input type=\"text\" name=\"framework\" value={this.state.framework} className=\"form-control\" placeholder=\"쉼표(,)로 구분하여 입력해 주세요.\" onChange={this.handleValueChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>팀명</label>\r\n                            <input type=\"text\" name=\"team\" className=\"form-control\" placeholder=\"팀명\" value={this.state.team} onChange={this.handleValueChange}/>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>프로젝트 Github URL</label>\r\n                            <input type=\"text\" name=\"git_url\" value={this.state.git_url} className=\"form-control\" placeholder=\"Github URL\" onChange={this.handleValueChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6 create--period\">\r\n                            <label>진행 년도</label>\r\n                            <select name=\"period\" className=\"form-control\" onChange={this.handleValueChange}> \r\n                                <option value=\"2021\">2021</option>\r\n                                <option value=\"2020\">2020</option>\r\n                                <option value=\"2019\">2019</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                        <label>대표 이미지</label>\r\n                            <input type=\"file\" name=\"body_images\" id=\"body_images\" file={this.state.body_images} className=\"form-control\" onChange={this.handleFileChange} ref={this.fileInput}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"form-group \" + style.form_textarea}>\r\n                        <label>프로젝트에 대해 한 문장으로 간략하게 설명해 주세요.</label>\r\n                        <textarea className=\"form-control\" name=\"summary\" value={this.state.summary} rows=\"1\" onChange={this.handleValueChange}></textarea>\r\n                    </div>\r\n                    <div className={\"form-group \" + style.form_textarea}>\r\n                        <label>프로젝트에 대해 자세하게 설명해 주세요.</label>\r\n                        <textarea className=\"form-control\" name=\"body_text\" value={this.state.body_text} rows=\"20\" onChange={this.handleValueChange}></textarea>\r\n                    </div>\r\n                    <div className={\"form-group update--comments--wrapper \" + style.form_textarea}>\r\n                        <label>이 프로젝트에 참가한 팀원들의 소감을 들려주세요. 오른쪽의 + 버튼을 눌러 팀원을 추가할 수 있습니다. (최대 5명)</label>\r\n                        <button type=\"button\" onClick={this.addCommentsHandler} className={\"btn \" + style.comments_addbtn}>+</button>\r\n                        <div className={style.comments} key=\"1\">\r\n                            <div className=\"form-group update--bodytext\">\r\n                                <label>이름</label>\r\n                                <input type=\"text\" name=\"name1\" className=\"form-control\" value={this.state.name1} placeholder=\"이름\" onChange={this.handleValueChange}/>\r\n                                {/*<button onClick={this.subtractCommentHandler}>삭제</button>*/}\r\n                            </div>\r\n                            <div className=\"form-group update--bodytext\">\r\n                                <label>소감</label>\r\n                                <textarea className=\"form-control update--comment--impression\" name=\"comment1\" value={this.state.comment1}  onChange={this.handleValueChange}></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={style.btn_wrapper}>\r\n                        <button type=\"submit\" className={\"btn btn-primary\" + style.btn_spacer}>수정 완료</button>\r\n                        <button type=\"button\" className=\"btn btn-secondary\">취소</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateProject;\r\n","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\CreateProject\\CreateProject.js",["92","93","94"],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Auth\\Login.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Main\\MainHeader.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Main\\ProjectList.js",["95"],"import React, { Component } from 'react';\r\nimport style from './MainStyle.module.css';\r\nimport ProjectWrapperByYear from './ProjectWrapperByYear';\r\n\r\nclass ProjectList extends Component {\r\n    state = {\r\n        projects: [],\r\n        sortedProjects: {},\r\n        onUpdate: () => console.warn('onUpdate not defined'),\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // async await 아직도 이해 못함 ...\r\n        await this.callAPI().then(\r\n            res => {\r\n                this.setState({projects: res});\r\n                console.log(this.state.projects);\r\n            }).catch(\r\n                error => { console.log(error);\r\n            }\r\n        );\r\n        // 초기화\r\n        const arr = [];\r\n        this.state.projects.forEach((info) => {\r\n            if (!arr.includes(info.period))\r\n                arr.push(info.period);\r\n        });\r\n\r\n        arr.forEach((year) => {\r\n            this.state.sortedProjects[year] = [];\r\n            const nextState = JSON.parse(JSON.stringify(this.state.sortedProjects));\r\n            this.setState({ sortedProjects: nextState });\r\n        })\r\n\r\n        this.state.projects.forEach((info) => {\r\n            console.log(this.state.sortedProjects[info.period]);\r\n            this.state.sortedProjects[info.period] = [\r\n                ...this.state.sortedProjects[info.period],\r\n                info,\r\n            ];\r\n            const nextState = JSON.parse(JSON.stringify(this.state.sortedProjects));\r\n            this.setState({ sortedProjects: nextState });\r\n        })\r\n    }\r\n\r\n    callAPI = async () => {\r\n        const res = await fetch('/api/project');\r\n        const body = await res.json();\r\n        return body;\r\n    }\r\n\r\n    render() {\r\n        const{ onUpdate } = this.props;\r\n\r\n        return (\r\n            <div className={style.project_wrapper}>\r\n                {Object.keys(this.state.sortedProjects).map((year, key) => {\r\n                    return (\r\n                        <ProjectWrapperByYear\r\n                        year={year}\r\n                        data={this.state.sortedProjects[year]}\r\n                        key={key}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }    \r\n}\r\n\r\nexport default ProjectList;","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\DeleteProject\\DeleteProject.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Main\\ProjectWrapperByYear.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Main\\ProjectListItem.js",["96"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport style from './MainStyle.module.css';\r\n\r\nclass ProjectListItem extends Component {\r\n    render() {\r\n        const { id, title, team, summary, body_images } = this.props.info;\r\n        return (\r\n            <div className={style.project_item}>\r\n                <Link to={`/projects/${id}`}>\r\n                    <div className={style.project_contents}>\r\n                        <div className={style.project_textarea}>\r\n                            <div className={style.project_title_wrapper}>\r\n                                <h4 className={style.project_title}>{title}</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className={style.project_image_wrapper}>\r\n                            <img src={'/upload/'+ body_images}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={style.project_item_hover}>\r\n                        <h4 className={style.project_title}>{title}</h4>\r\n                        <div className={style.project_details}>\r\n                            <span className={style.project_team}>{team}</span>\r\n                        </div>\r\n                        <p className={style.project_description}>{summary}</p>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectListItem;","C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\QuestionIndex\\QuestionIndex.js",["97","98","99","100"],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\Question\\Question.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\Impression\\ImpressionWrapper.js",[],"C:\\Users\\songf\\Desktop\\solchive\\solchive\\src\\components\\Projects\\Impression\\Impression.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":68,"column":25,"nodeType":"107","endLine":68,"endColumn":106},{"ruleId":"108","severity":1,"message":"109","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":234,"column":13,"nodeType":"114","messageId":"115","endLine":234,"endColumn":37},{"ruleId":"116","severity":1,"message":"117","line":234,"column":13,"nodeType":"110","messageId":"118","endLine":234,"endColumn":18,"fix":"119"},{"ruleId":"112","severity":1,"message":"113","line":251,"column":13,"nodeType":"114","messageId":"115","endLine":251,"endColumn":37},{"ruleId":"116","severity":1,"message":"117","line":251,"column":13,"nodeType":"110","messageId":"118","endLine":251,"endColumn":18,"fix":"120"},{"ruleId":"108","severity":1,"message":"121","line":264,"column":15,"nodeType":"110","messageId":"111","endLine":264,"endColumn":22},{"ruleId":"108","severity":1,"message":"109","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":137,"column":13,"nodeType":"114","messageId":"115","endLine":137,"endColumn":37},{"ruleId":"116","severity":1,"message":"117","line":137,"column":13,"nodeType":"110","messageId":"118","endLine":137,"endColumn":18,"fix":"122"},{"ruleId":"108","severity":1,"message":"123","line":53,"column":16,"nodeType":"110","messageId":"111","endLine":53,"endColumn":24},{"ruleId":"105","severity":1,"message":"106","line":18,"column":29,"nodeType":"107","endLine":18,"endColumn":65},{"ruleId":"124","severity":1,"message":"125","line":16,"column":17,"nodeType":"107","endLine":16,"endColumn":47},{"ruleId":"124","severity":1,"message":"125","line":17,"column":17,"nodeType":"107","endLine":17,"endColumn":47},{"ruleId":"124","severity":1,"message":"125","line":18,"column":17,"nodeType":"107","endLine":18,"endColumn":47},{"ruleId":"124","severity":1,"message":"125","line":19,"column":17,"nodeType":"107","endLine":19,"endColumn":47},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'index:' is defined but never used.","unused",{"range":"128","text":"129"},{"range":"130","text":"129"},"'nameRef' is assigned a value but never used.",{"range":"131","text":"129"},"'onUpdate' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",[7990,7997],"",[8785,8792],[4608,4615]]